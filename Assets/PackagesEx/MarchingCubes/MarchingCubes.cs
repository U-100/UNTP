using Unity.Mathematics;

namespace Ugol.MarchingCubes
{
	//
	// Lookup Tables for Marching Cubes
	//
	// These tables differ from the original paper (Marching Cubes: A High Resolution 3D Surface Construction Algorithm)
	//
	// The co-ordinate system has the more convenient properties:
	//
	//    i = cube index [0, 7]
	//    x = (i & 1) >> 0
	//    y = (i & 2) >> 1
	//    z = (i & 4) >> 2
	//
	// Axes are:
	//
	//      y
	//      |     z
	//      |   /
	//      | /
	//      +----- x
	//
	// Vertex and edge layout:
	//
	//            6             7
	//            +-------------+               +-----6-------+   
	//          / |           / |             / |            /|   
	//        /   |         /   |          11   7         10   5
	//    2 +-----+-------+  3  |         +-----+2------+     |   
	//      |   4 +-------+-----+ 5       |     +-----4-+-----+   
	//      |   /         |   /           3   8         1   9
	//      | /           | /             | /           | /       
	//    0 +-------------+ 1             +------0------+         
	//
	// Triangulation cases are generated prioritising rotations over inversions, which can introduce non-manifold geometry.
	//

	public static class MCBit
	{
		// L/R - Left/Right, N/F - Near/Far, T/B - Top/Bottom

		public const int LNB = 0b00000001;
		public const int RNB = 0b00000010;
		public const int LNT = 0b00000100;
		public const int RNT = 0b00001000;
		public const int LFB = 0b00010000;
		public const int RFB = 0b00100000;
		public const int LFT = 0b01000000;
		public const int RFT = 0b10000000;
		public const int LB = LNB | LFB;
		public const int LT =  LNT | LFT;
		public const int LN = LNB | LNT;
		public const int LF =  LFB | LFT;
		public const int RB = RNB | RFB;
		public const int RT = RNT | RFT;
		public const int RN = RNB | RNT;
		public const int RF =  RFB | RFT;
		public const int NB = LNB | RNB;
		public const int NT = LNT | RNT;
		public const int FB = LFB | RFB;
		public const int FT = LFT | RFT;
		public const int L = LB | LT;
		public const int R = RB | RT;
		public const int N = NB | NT;
		public const int F = FB | FT;
		public const int B = LB | RB;
		public const int T = LT | RT;
		public const int ALL = R | L;

		public static int FromXYZ(int x, int y, int z) => x + y * 2 + z * 4;
		public static int FromCornerNumber(int nCorner) => FromXYZ(nCorner % 2, nCorner / 4 % 2, nCorner / 2 % 2);
	}

	public static class MCubes
	{
		public static float3 [] VERTS =
		{
			new float3(0.5f, 0,    0   ),
			new float3(1   , 0.5f, 0   ),
			new float3(0.5f, 1   , 0   ),
			new float3(0   , 0.5f, 0   ),
			new float3(0.5f, 0,    1   ),
			new float3(1   , 0.5f, 1   ),
			new float3(0.5f, 1   , 1   ),
			new float3(0   , 0.5f, 1   ),
			new float3(0   , 0   , 0.5f),
			new float3(1   , 0   , 0.5f),
			new float3(1   , 1   , 0.5f),
			new float3(0   , 1   , 0.5f),
		};
		
		// these are disambiguated marching cubes
		// in saddle cases "disconnected" behaviour is chosen
		public static int[][] TRIS =
		{
			new int[] { },
			new[] {3, 8, 0},
			new[] {1, 0, 9},
			new[] {9, 1, 8, 8, 1, 3},
			new[] {3, 2, 11},
			new[] {2, 11, 0, 0, 11, 8},
			new[] {1, 0, 9, 3, 2, 11},
			new[] {11, 1, 2, 11, 9, 1, 11, 8, 9},
			new[] {10, 2, 1},
			new[] {2, 1, 10, 0, 3, 8},
			new[] {0, 9, 2, 2, 9, 10},
			new[] {8, 2, 3, 8, 10, 2, 8, 9, 10},
			new[] {1, 10, 3, 3, 10, 11},
			new[] {10, 0, 1, 10, 8, 0, 10, 11, 8},
			new[] {9, 3, 0, 9, 11, 3, 9, 10, 11},
			new[] {9, 10, 8, 8, 10, 11},
			new[] {7, 4, 8},
			new[] {0, 3, 4, 4, 3, 7},
			new[] {0, 9, 1, 4, 8, 7},
			new[] {1, 4, 9, 1, 7, 4, 1, 3, 7},
			new[] {11, 3, 2, 8, 7, 4},
			new[] {4, 11, 7, 4, 2, 11, 4, 0, 2},
			new[] {3, 2, 11, 0, 9, 1, 4, 8, 7},
			new[] {9, 1, 4, 4, 1, 7, 7, 1, 2, 7, 2, 11},
			new[] {7, 4, 8, 1, 10, 2},
			new[] {7, 4, 3, 3, 4, 0, 10, 2, 1},
			new[] {10, 2, 9, 9, 2, 0, 7, 4, 8},
			new[] {7, 4, 9, 7, 9, 2, 9, 10, 2, 3, 7, 2},
			new[] {1, 10, 3, 3, 10, 11, 4, 8, 7},
			new[] {4, 0, 7, 0, 1, 10, 7, 0, 10, 7, 10, 11},
			new[] {7, 4, 8, 9, 3, 0, 9, 11, 3, 9, 10, 11},
			new[] {7, 4, 11, 4, 9, 11, 9, 10, 11},
			new[] {5, 9, 4},
			new[] {8, 0, 3, 9, 4, 5},
			new[] {1, 0, 5, 5, 0, 4},
			new[] {5, 8, 4, 5, 3, 8, 5, 1, 3},
			new[] {3, 2, 11, 5, 9, 4},
			new[] {2, 11, 0, 0, 11, 8, 5, 9, 4},
			new[] {4, 5, 0, 0, 5, 1, 11, 3, 2},
			new[] {11, 8, 2, 8, 4, 5, 2, 8, 5, 2, 5, 1},
			new[] {5, 9, 4, 1, 10, 2},
			new[] {0, 3, 8, 1, 10, 2, 5, 9, 4},
			new[] {2, 5, 10, 2, 4, 5, 2, 0, 4},
			new[] {4, 5, 8, 8, 5, 3, 3, 5, 10, 3, 10, 2},
			new[] {11, 3, 10, 10, 3, 1, 4, 5, 9},
			new[] {4, 5, 9, 10, 0, 1, 10, 8, 0, 10, 11, 8},
			new[] {4, 5, 10, 4, 10, 3, 10, 11, 3, 0, 4, 3},
			new[] {4, 5, 8, 5, 10, 8, 10, 11, 8},
			new[] {5, 9, 7, 7, 9, 8},
			new[] {3, 9, 0, 3, 5, 9, 3, 7, 5},
			new[] {7, 0, 8, 7, 1, 0, 7, 5, 1},
			new[] {3, 7, 1, 1, 7, 5},
			new[] {5, 9, 7, 7, 9, 8, 2, 11, 3},
			new[] {5, 9, 0, 5, 0, 11, 0, 2, 11, 7, 5, 11},
			new[] {2, 11, 3, 7, 0, 8, 7, 1, 0, 7, 5, 1},
			new[] {2, 11, 1, 11, 7, 1, 7, 5, 1},
			new[] {8, 7, 9, 9, 7, 5, 2, 1, 10},
			new[] {10, 2, 1, 3, 9, 0, 3, 5, 9, 3, 7, 5},
			new[] {2, 0, 10, 0, 8, 7, 10, 0, 7, 10, 7, 5},
			new[] {10, 2, 5, 2, 3, 5, 3, 7, 5},
			new[] {5, 9, 8, 5, 8, 7, 1, 10, 3, 10, 11, 3},
			new[] {1, 10, 0, 0, 10, 11, 0, 11, 7, 0, 7, 5, 0, 5, 9},
			new[] {8, 7, 0, 0, 7, 5, 0, 5, 10, 0, 10, 11, 0, 11, 3},
			new[] {5, 11, 7, 10, 11, 5},
			new[] {11, 6, 7},
			new[] {3, 8, 0, 7, 11, 6},
			new[] {1, 0, 9, 7, 11, 6},
			new[] {9, 1, 8, 8, 1, 3, 6, 7, 11},
			new[] {6, 7, 2, 2, 7, 3},
			new[] {0, 7, 8, 0, 6, 7, 0, 2, 6},
			new[] {6, 7, 2, 2, 7, 3, 9, 1, 0},
			new[] {9, 1, 2, 9, 2, 7, 2, 6, 7, 8, 9, 7},
			new[] {10, 2, 1, 11, 6, 7},
			new[] {2, 1, 10, 3, 8, 0, 7, 11, 6},
			new[] {0, 9, 2, 2, 9, 10, 7, 11, 6},
			new[] {6, 7, 11, 8, 2, 3, 8, 10, 2, 8, 9, 10},
			new[] {7, 10, 6, 7, 1, 10, 7, 3, 1},
			new[] {1, 10, 0, 0, 10, 8, 8, 10, 6, 8, 6, 7},
			new[] {9, 10, 0, 10, 6, 7, 0, 10, 7, 0, 7, 3},
			new[] {6, 7, 10, 7, 8, 10, 8, 9, 10},
			new[] {4, 8, 6, 6, 8, 11},
			new[] {6, 3, 11, 6, 0, 3, 6, 4, 0},
			new[] {11, 6, 8, 8, 6, 4, 1, 0, 9},
			new[] {6, 4, 11, 4, 9, 1, 11, 4, 1, 11, 1, 3},
			new[] {2, 8, 3, 2, 4, 8, 2, 6, 4},
			new[] {0, 2, 4, 4, 2, 6},
			new[] {9, 1, 0, 2, 8, 3, 2, 4, 8, 2, 6, 4},
			new[] {9, 1, 4, 1, 2, 4, 2, 6, 4},
			new[] {4, 8, 6, 6, 8, 11, 1, 10, 2},
			new[] {1, 10, 2, 6, 3, 11, 6, 0, 3, 6, 4, 0},
			new[] {0, 9, 10, 0, 10, 2, 4, 8, 6, 8, 11, 6},
			new[] {11, 6, 3, 3, 6, 4, 3, 4, 9, 3, 9, 10, 3, 10, 2},
			new[] {1, 10, 6, 1, 6, 8, 6, 4, 8, 3, 1, 8},
			new[] {1, 10, 0, 10, 6, 0, 6, 4, 0},
			new[] {0, 9, 3, 3, 9, 10, 3, 10, 6, 3, 6, 4, 3, 4, 8},
			new[] {4, 10, 6, 9, 10, 4},
			new[] {4, 5, 9, 6, 7, 11},
			new[] {7, 11, 6, 8, 0, 3, 9, 4, 5},
			new[] {1, 0, 5, 5, 0, 4, 11, 6, 7},
			new[] {11, 6, 7, 5, 8, 4, 5, 3, 8, 5, 1, 3},
			new[] {3, 2, 7, 7, 2, 6, 9, 4, 5},
			new[] {5, 9, 4, 0, 7, 8, 0, 6, 7, 0, 2, 6},
			new[] {1, 0, 4, 1, 4, 5, 3, 2, 7, 2, 6, 7},
			new[] {4, 5, 8, 8, 5, 1, 8, 1, 2, 8, 2, 6, 8, 6, 7},
			new[] {6, 7, 11, 5, 9, 4, 1, 10, 2},
			new[] {5, 9, 4, 7, 11, 6, 0, 3, 8, 2, 1, 10},
			new[] {7, 11, 6, 2, 5, 10, 2, 4, 5, 2, 0, 4},
			new[] {6, 7, 11, 3, 8, 4, 3, 4, 5, 3, 5, 2, 2, 5, 10},
			new[] {9, 4, 5, 7, 10, 6, 7, 1, 10, 7, 3, 1},
			new[] {5, 9, 4, 8, 0, 1, 8, 1, 10, 8, 10, 7, 7, 10, 6},
			new[] {6, 7, 10, 10, 7, 3, 10, 3, 0, 10, 0, 4, 10, 4, 5},
			new[] {4, 5, 8, 8, 5, 10, 8, 10, 6, 8, 6, 7},
			new[] {9, 6, 5, 9, 11, 6, 9, 8, 11},
			new[] {0, 3, 9, 9, 3, 5, 5, 3, 11, 5, 11, 6},
			new[] {1, 0, 8, 1, 8, 6, 8, 11, 6, 5, 1, 6},
			new[] {11, 6, 3, 6, 5, 3, 5, 1, 3},
			new[] {2, 6, 3, 6, 5, 9, 3, 6, 9, 3, 9, 8},
			new[] {5, 9, 6, 9, 0, 6, 0, 2, 6},
			new[] {3, 2, 8, 8, 2, 6, 8, 6, 5, 8, 5, 1, 8, 1, 0},
			new[] {1, 6, 5, 2, 6, 1},
			new[] {2, 1, 10, 9, 6, 5, 9, 11, 6, 9, 8, 11},
			new[] {2, 1, 10, 5, 9, 0, 5, 0, 3, 5, 3, 6, 6, 3, 11},
			new[] {10, 2, 5, 5, 2, 0, 5, 0, 8, 5, 8, 11, 5, 11, 6},
			new[] {10, 2, 5, 5, 2, 3, 5, 3, 11, 5, 11, 6},
			new[] {5, 9, 6, 6, 9, 8, 6, 8, 3, 6, 3, 1, 6, 1, 10},
			new[] {5, 9, 6, 6, 9, 0, 6, 0, 1, 6, 1, 10},
			new[] {8, 3, 0, 5, 10, 6},
			new[] {6, 5, 10},
			new[] {6, 10, 5},
			new[] {3, 8, 0, 5, 6, 10},
			new[] {9, 1, 0, 10, 5, 6},
			new[] {3, 8, 1, 1, 8, 9, 6, 10, 5},
			new[] {6, 10, 5, 2, 11, 3},
			new[] {8, 0, 11, 11, 0, 2, 5, 6, 10},
			new[] {10, 5, 6, 1, 0, 9, 3, 2, 11},
			new[] {5, 6, 10, 11, 1, 2, 11, 9, 1, 11, 8, 9},
			new[] {2, 1, 6, 6, 1, 5},
			new[] {5, 6, 1, 1, 6, 2, 8, 0, 3},
			new[] {6, 9, 5, 6, 0, 9, 6, 2, 0},
			new[] {8, 9, 3, 9, 5, 6, 3, 9, 6, 3, 6, 2},
			new[] {3, 6, 11, 3, 5, 6, 3, 1, 5},
			new[] {5, 6, 11, 5, 11, 0, 11, 8, 0, 1, 5, 0},
			new[] {0, 9, 3, 3, 9, 11, 11, 9, 5, 11, 5, 6},
			new[] {5, 6, 9, 6, 11, 9, 11, 8, 9},
			new[] {7, 4, 8, 5, 6, 10},
			new[] {0, 3, 4, 4, 3, 7, 10, 5, 6},
			new[] {4, 8, 7, 9, 1, 0, 10, 5, 6},
			new[] {6, 10, 5, 1, 4, 9, 1, 7, 4, 1, 3, 7},
			new[] {11, 3, 2, 7, 4, 8, 5, 6, 10},
			new[] {10, 5, 6, 4, 11, 7, 4, 2, 11, 4, 0, 2},
			new[] {7, 4, 8, 3, 2, 11, 9, 1, 0, 10, 5, 6},
			new[] {10, 5, 6, 7, 4, 9, 7, 9, 1, 7, 1, 11, 11, 1, 2},
			new[] {2, 1, 6, 6, 1, 5, 8, 7, 4},
			new[] {7, 4, 0, 7, 0, 3, 5, 6, 1, 6, 2, 1},
			new[] {8, 7, 4, 6, 9, 5, 6, 0, 9, 6, 2, 0},
			new[] {5, 6, 9, 9, 6, 2, 9, 2, 3, 9, 3, 7, 9, 7, 4},
			new[] {4, 8, 7, 3, 6, 11, 3, 5, 6, 3, 1, 5},
			new[] {7, 4, 11, 11, 4, 0, 11, 0, 1, 11, 1, 5, 11, 5, 6},
			new[] {4, 8, 7, 11, 3, 0, 11, 0, 9, 11, 9, 6, 6, 9, 5},
			new[] {5, 6, 9, 9, 6, 11, 9, 11, 7, 9, 7, 4},
			new[] {9, 4, 10, 10, 4, 6},
			new[] {6, 10, 4, 4, 10, 9, 3, 8, 0},
			new[] {0, 10, 1, 0, 6, 10, 0, 4, 6},
			new[] {3, 8, 4, 3, 4, 10, 4, 6, 10, 1, 3, 10},
			new[] {9, 4, 10, 10, 4, 6, 3, 2, 11},
			new[] {8, 0, 2, 8, 2, 11, 9, 4, 10, 4, 6, 10},
			new[] {11, 3, 2, 0, 10, 1, 0, 6, 10, 0, 4, 6},
			new[] {2, 11, 1, 1, 11, 8, 1, 8, 4, 1, 4, 6, 1, 6, 10},
			new[] {4, 1, 9, 4, 2, 1, 4, 6, 2},
			new[] {3, 8, 0, 4, 1, 9, 4, 2, 1, 4, 6, 2},
			new[] {4, 6, 0, 0, 6, 2},
			new[] {3, 8, 2, 8, 4, 2, 4, 6, 2},
			new[] {3, 1, 11, 1, 9, 4, 11, 1, 4, 11, 4, 6},
			new[] {9, 4, 1, 1, 4, 6, 1, 6, 11, 1, 11, 8, 1, 8, 0},
			new[] {11, 3, 6, 3, 0, 6, 0, 4, 6},
			new[] {8, 6, 11, 4, 6, 8},
			new[] {10, 7, 6, 10, 8, 7, 10, 9, 8},
			new[] {10, 9, 6, 9, 0, 3, 6, 9, 3, 6, 3, 7},
			new[] {8, 7, 0, 0, 7, 1, 1, 7, 6, 1, 6, 10},
			new[] {6, 10, 7, 10, 1, 7, 1, 3, 7},
			new[] {3, 2, 11, 10, 7, 6, 10, 8, 7, 10, 9, 8},
			new[] {6, 10, 7, 7, 10, 9, 7, 9, 0, 7, 0, 2, 7, 2, 11},
			new[] {11, 3, 2, 1, 0, 8, 1, 8, 7, 1, 7, 10, 10, 7, 6},
			new[] {6, 10, 7, 7, 10, 1, 7, 1, 2, 7, 2, 11},
			new[] {8, 7, 6, 8, 6, 1, 6, 2, 1, 9, 8, 1},
			new[] {0, 3, 9, 9, 3, 7, 9, 7, 6, 9, 6, 2, 9, 2, 1},
			new[] {8, 7, 0, 7, 6, 0, 6, 2, 0},
			new[] {7, 2, 3, 6, 2, 7},
			new[] {11, 3, 6, 6, 3, 1, 6, 1, 9, 6, 9, 8, 6, 8, 7},
			new[] {11, 7, 6, 1, 9, 0},
			new[] {11, 3, 6, 6, 3, 0, 6, 0, 8, 6, 8, 7},
			new[] {11, 7, 6},
			new[] {10, 5, 11, 11, 5, 7},
			new[] {10, 5, 11, 11, 5, 7, 0, 3, 8},
			new[] {7, 11, 5, 5, 11, 10, 0, 9, 1},
			new[] {3, 8, 9, 3, 9, 1, 7, 11, 5, 11, 10, 5},
			new[] {5, 2, 10, 5, 3, 2, 5, 7, 3},
			new[] {0, 2, 8, 2, 10, 5, 8, 2, 5, 8, 5, 7},
			new[] {0, 9, 1, 5, 2, 10, 5, 3, 2, 5, 7, 3},
			new[] {10, 5, 2, 2, 5, 7, 2, 7, 8, 2, 8, 9, 2, 9, 1},
			new[] {1, 11, 2, 1, 7, 11, 1, 5, 7},
			new[] {8, 0, 3, 1, 11, 2, 1, 7, 11, 1, 5, 7},
			new[] {0, 9, 5, 0, 5, 11, 5, 7, 11, 2, 0, 11},
			new[] {3, 8, 2, 2, 8, 9, 2, 9, 5, 2, 5, 7, 2, 7, 11},
			new[] {5, 7, 1, 1, 7, 3},
			new[] {8, 0, 7, 0, 1, 7, 1, 5, 7},
			new[] {0, 9, 3, 9, 5, 3, 5, 7, 3},
			new[] {9, 7, 8, 5, 7, 9},
			new[] {8, 5, 4, 8, 10, 5, 8, 11, 10},
			new[] {10, 5, 4, 10, 4, 3, 4, 0, 3, 11, 10, 3},
			new[] {1, 0, 9, 8, 5, 4, 8, 10, 5, 8, 11, 10},
			new[] {9, 1, 4, 4, 1, 3, 4, 3, 11, 4, 11, 10, 4, 10, 5},
			new[] {10, 5, 2, 2, 5, 3, 3, 5, 4, 3, 4, 8},
			new[] {10, 5, 2, 5, 4, 2, 4, 0, 2},
			new[] {9, 1, 0, 3, 2, 10, 3, 10, 5, 3, 5, 8, 8, 5, 4},
			new[] {10, 5, 2, 2, 5, 4, 2, 4, 9, 2, 9, 1},
			new[] {1, 5, 2, 5, 4, 8, 2, 5, 8, 2, 8, 11},
			new[] {2, 1, 11, 11, 1, 5, 11, 5, 4, 11, 4, 0, 11, 0, 3},
			new[] {4, 8, 5, 5, 8, 11, 5, 11, 2, 5, 2, 0, 5, 0, 9},
			new[] {5, 4, 9, 2, 3, 11},
			new[] {4, 8, 5, 8, 3, 5, 3, 1, 5},
			new[] {0, 5, 4, 1, 5, 0},
			new[] {0, 9, 3, 3, 9, 5, 3, 5, 4, 3, 4, 8},
			new[] {5, 4, 9},
			new[] {11, 4, 7, 11, 9, 4, 11, 10, 9},
			new[] {0, 3, 8, 11, 4, 7, 11, 9, 4, 11, 10, 9},
			new[] {0, 4, 1, 4, 7, 11, 1, 4, 11, 1, 11, 10},
			new[] {7, 11, 4, 4, 11, 10, 4, 10, 1, 4, 1, 3, 4, 3, 8},
			new[] {9, 4, 7, 9, 7, 2, 7, 3, 2, 10, 9, 2},
			new[] {8, 0, 7, 7, 0, 2, 7, 2, 10, 7, 10, 9, 7, 9, 4},
			new[] {1, 0, 10, 10, 0, 4, 10, 4, 7, 10, 7, 3, 10, 3, 2},
			new[] {7, 8, 4, 10, 1, 2},
			new[] {9, 4, 1, 1, 4, 2, 2, 4, 7, 2, 7, 11},
			new[] {8, 0, 3, 2, 1, 9, 2, 9, 4, 2, 4, 11, 11, 4, 7},
			new[] {7, 11, 4, 11, 2, 4, 2, 0, 4},
			new[] {3, 8, 2, 2, 8, 4, 2, 4, 7, 2, 7, 11},
			new[] {9, 4, 1, 4, 7, 1, 7, 3, 1},
			new[] {9, 4, 1, 1, 4, 7, 1, 7, 8, 1, 8, 0},
			new[] {3, 4, 7, 0, 4, 3},
			new[] {7, 8, 4},
			new[] {8, 11, 9, 9, 11, 10},
			new[] {0, 3, 9, 3, 11, 9, 11, 10, 9},
			new[] {1, 0, 10, 0, 8, 10, 8, 11, 10},
			new[] {10, 3, 11, 1, 3, 10},
			new[] {3, 2, 8, 2, 10, 8, 10, 9, 8},
			new[] {9, 2, 10, 0, 2, 9},
			new[] {1, 0, 10, 10, 0, 8, 10, 8, 3, 10, 3, 2},
			new[] {2, 10, 1},
			new[] {2, 1, 11, 1, 9, 11, 9, 8, 11},
			new[] {2, 1, 11, 11, 1, 9, 11, 9, 0, 11, 0, 3},
			new[] {11, 0, 8, 2, 0, 11},
			new[] {3, 11, 2},
			new[] {1, 8, 3, 9, 8, 1},
			new[] {1, 9, 0},
			new[] {8, 3, 0},
			new int[] { },
		};
	}
}
